
회원가입 + 로그인

[
 REST API
 - REQ : 사용자 요청
 - RES : 사용자에게 응답
]

--------------------------------------------------------------

1.
ex폴더에 npm init

localhost:3000/user/login --- 포스트맨으로 POST 요청을 보냈을 시

req.body.email
req.body.pw <-------------------------------------------------

res로 ok라는 메시지가 올 수 있도록하는데
Router를 사용할 것

--------------------------------------------------------------

쿠키파서
익스프레스 세션
회원가입 + 로그인

--------------------------------------------------------------
게시물CRUD + 백엔드 리뷰 + ⭐백엔프론트엔드합치기⭐ + 타입스크립트
--------------------------------------------------------------

 # 쿠키와 세션


쿠키

쿠키는 브라우저 로컬에 저장되는 키와 값이 들어있는 작은 데이터 파일
사용자가 인증 유효 기간을 명시할 수 있으며, 유효 시간이 정해지면 브라우저가 종료되어도 유지되는 특징
설정이 되어있지 않으면 브라우저 창을 닫으면 삭제
- 크롬의 설정에서 쿠키에 대한 설정을 조정할 수 있음
- 후에 프로젝트 사용 시 사용자가 쿠키를 사용하지 않는다면 쿠키를 이용한 기능이 작동하지 않을 수도 있음

최대 300개의 쿠키를 저장, 쿠키의 값은 하나당 4KB까지 저장

아이디와 비밀번호를 저장
자동로그인, 팝업창 오늘 더이상 창을 보지 않음
쇼핑몰 장바구니 (세션 스토리지)

--------------------------------------------------------------------------------------------

세션

세션은 쿠키를 기반, 파일을 브라우저 저장하는 쿠키와 달리 세션은 서버측에서 관리
서버에서는 사용자를 구분하기위해 각각 세션 ID를 부여, 웹 브라우저가 서버에 접속해서 종료할 때까지 인증상태를 유지
물론 접속 시간에 제한을 두어 일정 시간 응답이 없다면 정보가 유지되지 않게 설정이 가능

사용자에 대한 정보를 서버에 두기 때문에
쿠키보다 보안에 좋지만 사용자가 많아질 수록 서버에 부담
즉 동접자 수가 많으면 서버에 과부화를 주게 됩니다

로그인 같이 보안상 중요한 작업을 수행할 때 사용

--------------------------------------------------------------------------------------------

웹스토리지
쿠키의 단점을 보완하기 위해서 탄생

로컬스토리지, 세션스토리지

프론트에서 저장이 가능
localstorage.setItem("키", 값);
localstorage.getItem("키")

사용자의 웹스토리지에 데이터를 저장하고 가지고올 수 있습니다

로컬스토리지: 브라우저가 종료되어도 데이터를 영구적으로 저장    => 서버
세션스토리지: 브라우저가 닫히는 경우 데이터가 삭제              => 브라우저

최대 용량 5MB = 1024 * 1024 * 5

ex) 장바구니

상품이미지 경로
상품 가격 
총 가격
상품 갯수

주문페이지에서 호출 할 때 불러올 수 있도록 해야하는데
데이터 베이스를 사용하지 않을 때 웹브라우저의 스토리지를 이용하여
데이터를 저장하고 불러올 수 있다

--------------------------------------------------------------------------------------------

cookie
session을 사용하기 위한 모듈


npm i cookie-parser
npm i express-session

--------------------------------------------------------------------------------------------

------------------------------------------ 회원가입 구현

암호화를 위한 라이브러리
현업에서 가장 많이 사용하고 있는 패스워드 암호화 알고리즘

회원가입시 회원가입 비밀번호를 암호화하여 데이터 베이스 저장

단방향 암호화
복호화(암호화 된 비밀번호를 다시 원래되로 되돌리는 것) 어렵다.
따라서 비밀번호를 관리할 때 유용하게 사용

ex)
pw: "1234" ---> DB저장 ----> "fghjrwpiytu410-P957134" <--- 해킹을 당해도 <---- 원래 암호인 "1234"를 알 수 없음
단, 사용자가 입력한 비밀번호와 일치하는지만 확인이 가능

npm i bcrypt

-------------------------------------------