----------------------------------------------------------------------복습
리엑트란?
복잡한 구조의 레이아웃을 컴포넌트 단위로 개발 할 수 있도록 하는 js 라이브러리

리엑트 핵심 컨셉?
리랜더와 컴포넌트

CSS-IN-js


hook 함수
state
ref ====> domselector ==> 리엑트에서 지양해야할 필요가 있음 넷플릭스 ref를 절대 사용하지않는다.
effect
memo
callback

state 불변성
(...), immer

전역 상태관리 툴
contextAPI, reducer
----------------------------------------------------------------------

React bootstrap

https://react-bootstrap.netlify.app/

- Getting Started <------ 사용법이 보통 적혀있습니다. 다른 라이브러리들도 마찬가지
- Components에서 내가 원하는 디자인을 선택해 적용

----------------------------------------------------------------------
1.
App.js 혹은 index.js에서
import 'bootstrap/dist/css/bootstrap.min.css'; 선언

2.
적용할 컴포넌트에서
import { 내가 사용하고자하는 부트스트랩 컴포넌트명 } from "react-bootstrap";
ex) import { Nav } from "react-bootstrap";

----------------------------------------------------------------------

npm i react-bootstrap bootstrap

----------------------------------------------------------------------

폴더 구조

pages:
조각난 컴포넌트들을 뭉쳐놓은 페이지.js를 모아놓은 폴더

copoments:
조각난 컴포넌들을 모아놓은 폴더

_layout:
pages를 감싸주어 컴포넌드틀을 
자식으로 받는 레이아웃을 모아놓은 폴더 
(header, footer, nav, sidebar ... )

-------------------------------------------------------------------------------------------------

컴포넌트에 {children} 적용하기

<상위컴포넌트> -------- appLayOut.js
    <하위 컴포넌트/>
<상위컴포넌트>


상위 컴포넌트.js에서
const 상위 컴포넌트는 = ( {children} )으로 상위 컴포넌트 자식에 위치한 하위 컴포넌트를 props로 받아
사용할 수 있다.

-------------------------------------------------------------------------------------------------

레이아웃이 고정이라면 APP.JS(최상위 컴포넌트)를 감쌀 경우
모든 페이지에 레이아웃이 적용되지만

레이아웃이 없는 페이지가 있고 있는 페이지가 따로있다면
pages 폴더에 각 js 파일에 레이아웃을 적용하는


app.js, index.js
-------------------------------------------------------------------------------------------------

React-router-dom

npm i react-router-dom
// 라이브러리 설치할 때 프로젝트 경로에 설치


(설치파일)
npm i react-router-dom
npm i styled-components
npm i redux react-redux
npm i redux-saga redux-devtools-extension redux-logger
---------------------------------------------
npm i immer
npm i moment
---------------------------------------------
npm i shortid
npm i @faker-js/faker
---------------------------------------------






