
localhost:3000/
--------- ----
ip주소   : 포트/
===============> 대신에 쉬운 도메인 이름
192.111.000.555/login/...

----------------------------------------------------------------

express와 함께 자주 사용하는 미들웨어

:express의 핵심은 미들웨어라고 할 수 있음. 

미들웨어란, 요청(req)와 응답(res) 중간(middle)에 위치하여 미들웨어 라고 부른다.
중간에서 요청 응답을 조작하여 기능을 추가하기도, 나쁜 요청을 걸러내는 역할을 하며
express의 대부분의 기능이 미들웨어로 컨트롤 하기 때문에 eexpress의 전부라고 해도
과언이 아님

사용법)
app.use(미들웨어) : 모든 요청에서 미들웨어 실행
app.use("/abc", 미들웨어) : abc로 시작하는 요청에서 미들웨어 실행
app.post("/abc". 미들웨어) : abc로 시작하는 post 요청에서 미들웨어 실행

1. morgan
2. body_parser
3. static

.. cookie 다양한 미들웨어 (로그인, 그에 맞는 기능이 나올 때)

-------------------------------------------------------------------------------

메서드(method)의 종류

GET
: 서버의 자원을 가져오고자 할 때 사용, 요청의 본문에 데이터를 넣지 않음
보내야한다면 주소를 활용해 쿼리스트링을 이용

POST
: 서버에 자원을 새로 등록하고자 할 때 사용, 요청의 본문에 새로 등록할 데이터를
넣어서 요청

PUT
: 서버의 자원을 요청에 들어있는 자원으로 치환, 요청의 본문에 치환 할 데이터를 넣어
서 요청

PATCH
: 서버의 자원의 일부만 수정하고 싶을 때 사용, 요청의 본문에 데이터를 넣지 않음

DELETE
: 서버의 자원을 삭제할 때 사용, 본문에 데이터를 넣지 않음

OPTTIONS
: 요청을 하기 전에 통신 옵션을 설명하기 위해 사용

-------------------------------------------------------------------------------

REST와 REST API

REST?
자원을 이름으로 구분하여 해당 자원의 정보를 주고 받는 모든 것

API?
데이터와 기능의 집합을 제공하여 프로그램간 상호작용하며 서로 정보를 교환가능
하도록 하는 것

REST API?
REST 기반으로 서비스 API를 구현하는 것, 요즘 대부분의 업체가 REST API를 제공

* 백엔드와의 협업에서 중요
- 내가 어떤 API에 어떤 데이터를 주고 어떤 데이터를 받아서 화면에 표현할 수 있을까

"/login" --> id pw ---> 사용자정보 ---> 화면에 표출
(rest api)
-------------------------------------------------------------------------------

req, res

* req

req.app
-app 객체 접근 (req.app.set)

req.body
-요청의 본문 해석 (body_parser)

req.cookies
-미들웨어가 만든 쿠키를 해석 (cookie_parser)

req.ip
- 요청의 ip 주소

req.params
- 라우트 매개변수에 대한 정보가 담긴 객체

req.query
- 쿼리스트링에 대한 정보가 담긴 객체

req.signedCookies
- 인증된 쿠키들이 담겨진 객체

req.get(헤더이름)
- 헤더의 값을 가져올 때 사용


* res

res.app
- app 객체 접근

res.cookie(키, 값, 옵션)
- 쿠키 설정

res.clearCookie(키, 값, 옵션)
- 쿠키 삭제

res.write
- 보낼 데이터를 작성만

res.end
- 데이터 없이 응답을 보냄

res.json
- json 형식으로 응답

res.redirect
- 이동할 주소와 함께 응답을 보냄

res.render (뷰, 데이터)
- 데이터와 함께 다른 템플릿 엔진을 응답할 때 (ex jade, ejs)

res.send(데이터)
- 데이터와 함께 응답을 보냄

res.sendFile(경로)
- 경로에 위치한 파일을 보냄

res.set(헤더, 값)
- 응답의 헤더를 결정

res.status
- 응답 시의 http 상태 코드를 지정

---------------------------------------------------------------------------

router

---------------------------------------------------------------------------

multer
    파일을 업로드하기 위한 익스프레스 미들웨어
    npm i multer

---------------------------------------------------------------------------

