
React를 잘하는 사람

(1) 요구 사항에 맞는 적합란 라이브러리 (o)

(2) 컴포넌트를 기낭 단위로 잘 분해하는 것 (o)

(3) hook 함수 활용 (o)

(4) 백엔드에게 받아온 RESTapi 가져온 데이터들을 전역 상태로 잘 관리해주는 것 (o)

----------------------------------------------------------------------------

전역 상태 관리
상태 = state = 어떠한 컴포넌트에서도 사용할 수 있도록 전역으로 관리하는 것

(최상위 컴포넌트) -> (하위 컴포넌트) 
                 -> (하위) -> (하위) -> (하위) -> (하위 컴포넌트) = 복잡해진다

이러한 state값 을 전역으로 관리해주고
state를 관리하는 로직(state에 값을 추가하거나 삭제하거나) 따로 관리할 수 있게하는 것

------------------------------------------------------------------------------

react 
내에서 지원 ------------------------- / 라이브러리 (가이드 라인)

useReducer
Context API =========== 단점 ========> redux ======> mobx ====> react query + recoil
                                      (제일 쉬움) ---------------------------------->

------------------------------------------------------------------------------

useReducer?
- 지금까지 사용했던 상태 업데이트 로직을 컴포넌트에서 분리시킬 수 있는 Hook 함수

------------------------------------------------------------------------------

useReducer 복잡한 루트
ContextAPI
redux setting
My blog (시작 혹은 html, css)

------------------------------------------------------------------------------

리엑트 복습 + 프로젝트

------------------------------------------------------------------------------

