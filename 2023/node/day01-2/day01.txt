
http
    http를 사용하는 웹 서버를 생성

    createServer() : server 객체를 생성
    writeHead() : HTTP RESPONSE MESSAGE(응답메세지)의 HEADER 작성할 수 있음
    end() : HTTP RESPONSE MESSAGE(응답메세지)의 BODY 작성할 수 있음
    listen() : 서버를 실행하고 클라이언트를 기다리는 상태

    하지만 현재에 이르러 http만을 사용하여 서버를 구성하지 않습니다.

    express나 nextJS와 같은 더 편리하고 많은 기능들이 내장된 라이브러리르 사용하는 경우가 많습니다.
    하지만 위 라이브러리들도 결국에는 http 모듈을 기반

-----------------------------------------------------------------------------------------------------------

express
    웹 서버의 대부분의 기능을 express 모듈 하나로 구현 가능
    만약 express를 쓰지 않고 http 모듈만으로 개발을 한다면 다양한 라이브러리에 의존하게 되고
    간단하지 못하고 지저분한 코드를 작성하게 될 것

    [설치방법]
    npm init
    npm i express

-----------------------------------------------------------------------------------------------------------

    nodemon 모듈
        서버의 코드가 변경 되었을 때 서버를 종료하지 안하도 알아서 서버를 재빌드하는 모듈
        npm i -g nodemon

-----------------------------------------------------------------------------------------------------------

    express의 미들웨어
        HTTP 통신간 res, req 사이에서 데이터를 조작하기도 하고 변경하기도 하고 추가하기도 하고
        나쁜 요청에 대해서 예외 사항을 걸러내기도 하며, 유효성 검사

    사용법

        app.use(미들웨어) -- 모든 요청
        app.use('/abc', 미들웨어) -- 특정 라우팅 요청에서만
        app.post('/abc' 미들웨어) -- /abc로 시작하는 모든 post 요청에서만


    종류
    
        morgan
        body-parser
        static
        cookie-parser

        npm i morgan
-----------------------------------------------------------------------------------------------------------